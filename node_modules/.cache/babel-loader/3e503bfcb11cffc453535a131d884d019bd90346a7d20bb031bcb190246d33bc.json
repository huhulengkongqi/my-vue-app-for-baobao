{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      isInputVisible: false,\n      userInput: '',\n      savedEntries: []\n    };\n  },\n  created() {\n    this.fetchSavedEntries(); // 页面加载时获取之前保存的内容\n  },\n  methods: {\n    // 显示输入框\n    showInputBox() {\n      this.isInputVisible = true;\n    },\n    // 保存输入内容\n    // 保存数据\n    async saveInput() {\n      console.log('Save button clicked'); // 确认按钮点击事件\n      console.log('Saved entries before update:', this.savedEntries); // 确保这是一个数组\n\n      if (this.userInput) {\n        try {\n          const response = await fetch(\"/.netlify/functions/saveEntry\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              content: this.userInput\n            })\n          });\n          if (!response.ok) {\n            const error = await response.json();\n            console.error('Failed to save entry:', error); // 输出错误信息\n            return;\n          }\n          const data = await response.json();\n          console.log('Data saved:', data); // 确认数据是否被成功保存\n          if (Array.isArray(this.savedEntries)) {\n            this.savedEntries.push(data.entry);\n          } else {\n            console.error('savedEntries is not an array'); // 如果类型不对，输出错误信息\n          }\n          this.userInput = \"\";\n        } catch (error) {\n          console.error('Error saving input:', error); // 捕获错误并输出\n        }\n      }\n    },\n    // 获取数据\n    async fetchSavedEntries() {\n      const response = await fetch(\"/.netlify/functions/getEntries\");\n      const data = await response.json();\n      this.savedEntries = data.entries;\n    },\n    // 删除数据\n    async deleteEntry(index) {\n      await fetch(\"/.netlify/functions/deleteEntry\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          index\n        })\n      });\n      this.savedEntries = this.savedEntries.filter((_, i) => i !== index);\n    }\n  }\n};","map":{"version":3,"names":["data","isInputVisible","userInput","savedEntries","created","fetchSavedEntries","methods","showInputBox","saveInput","console","log","response","fetch","method","headers","body","JSON","stringify","content","ok","error","json","Array","isArray","push","entry","entries","deleteEntry","index","filter","_","i"],"sources":["src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>保存输入内容</h1>\n    <button @click=\"showInputBox\">输入内容</button>\n\n    <div v-if=\"isInputVisible\">\n      <input v-model=\"userInput\" placeholder=\"请输入内容\" />\n      <button @click=\"saveInput\">确定</button>\n    </div>\n\n    <h2>已保存的内容：</h2>\n    <ul>\n      <li v-for=\"(entry, index) in savedEntries\" :key=\"index\">\n        {{ entry.date }}: {{ entry.content }}\n        <button @click=\"deleteEntry(index)\">删除</button>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isInputVisible: false,\n      userInput: '',\n      savedEntries: [],\n    };\n  },\n  created() {\n    this.fetchSavedEntries(); // 页面加载时获取之前保存的内容\n  },\n  methods: {\n    // 显示输入框\n    showInputBox() {\n      this.isInputVisible = true;\n    },\n    // 保存输入内容\n    // 保存数据\n    async saveInput() {\n      console.log('Save button clicked'); // 确认按钮点击事件\n      console.log('Saved entries before update:', this.savedEntries); // 确保这是一个数组\n\n      if (this.userInput) {\n        try {\n          const response = await fetch(\"/.netlify/functions/saveEntry\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ content: this.userInput }),\n          });\n\n          if (!response.ok) {\n            const error = await response.json();\n            console.error('Failed to save entry:', error); // 输出错误信息\n            return;\n          }\n\n          const data = await response.json();\n          console.log('Data saved:', data); // 确认数据是否被成功保存\n          if (Array.isArray(this.savedEntries)) {\n            this.savedEntries.push(data.entry);\n          } else {\n            console.error('savedEntries is not an array'); // 如果类型不对，输出错误信息\n          }\n          this.userInput = \"\";\n        } catch (error) {\n          console.error('Error saving input:', error); // 捕获错误并输出\n        }\n      }\n    },\n\n// 获取数据\n    async fetchSavedEntries() {\n      const response = await fetch(\"/.netlify/functions/getEntries\");\n      const data = await response.json();\n      this.savedEntries = data.entries;\n    },\n\n// 删除数据\n    async deleteEntry(index) {\n      await fetch(\"/.netlify/functions/deleteEntry\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ index }),\n      });\n      this.savedEntries = this.savedEntries.filter((_, i) => i !== index);\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 样式可根据需求自定义 */\n</style>\n"],"mappings":";AAqBA;EACAA,KAAA;IACA;MACAC,cAAA;MACAC,SAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACA;IACAC,aAAA;MACA,KAAAN,cAAA;IACA;IACA;IACA;IACA,MAAAO,UAAA;MACAC,OAAA,CAAAC,GAAA;MACAD,OAAA,CAAAC,GAAA,sCAAAP,YAAA;;MAEA,SAAAD,SAAA;QACA;UACA,MAAAS,QAAA,SAAAC,KAAA;YACAC,MAAA;YACAC,OAAA;cACA;YACA;YACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;cAAAC,OAAA,OAAAhB;YAAA;UACA;UAEA,KAAAS,QAAA,CAAAQ,EAAA;YACA,MAAAC,KAAA,SAAAT,QAAA,CAAAU,IAAA;YACAZ,OAAA,CAAAW,KAAA,0BAAAA,KAAA;YACA;UACA;UAEA,MAAApB,IAAA,SAAAW,QAAA,CAAAU,IAAA;UACAZ,OAAA,CAAAC,GAAA,gBAAAV,IAAA;UACA,IAAAsB,KAAA,CAAAC,OAAA,MAAApB,YAAA;YACA,KAAAA,YAAA,CAAAqB,IAAA,CAAAxB,IAAA,CAAAyB,KAAA;UACA;YACAhB,OAAA,CAAAW,KAAA;UACA;UACA,KAAAlB,SAAA;QACA,SAAAkB,KAAA;UACAX,OAAA,CAAAW,KAAA,wBAAAA,KAAA;QACA;MACA;IACA;IAEA;IACA,MAAAf,kBAAA;MACA,MAAAM,QAAA,SAAAC,KAAA;MACA,MAAAZ,IAAA,SAAAW,QAAA,CAAAU,IAAA;MACA,KAAAlB,YAAA,GAAAH,IAAA,CAAA0B,OAAA;IACA;IAEA;IACA,MAAAC,YAAAC,KAAA;MACA,MAAAhB,KAAA;QACAC,MAAA;QACAC,OAAA;UACA;QACA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA;UAAAW;QAAA;MACA;MACA,KAAAzB,YAAA,QAAAA,YAAA,CAAA0B,MAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,KAAAH,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}